frameworkVersion: '2'

service: r2d2

# Load environment variables from .env* files
useDotenv: true

provider:
  name: aws
  runtime: python3.8
  deploymentBucket:
    # Prevent future unintentional S3 Bucket leaks
    blockPublicAccess: true
  lambdaHashingVersion: 20201221
  logs:
    httpApi: true
  # Prevent costs from ever-increasing
  logRetentionInDays: 14
  environment:
    PROJECT_NAME: ${env:PROJECT_NAME}


package:
  individually: true
  exclude:
    # Remove any non-essential files from the deployment package
    - .direnv/**
    - .editorconfig
    - .env*
    - node_modules/**
    - requirement*
    - package*
    - venv/**
    - .idea/**
    - .vscode/**
    - package*.json
    - Pipfile*
    - requirements.txt
    - setup.cfg
    - resources/*
    - pyproject.toml
    - .mypy_cache/**
    - __pycache__/*
    - .pytest_cache/**
    - .coverage
    - htmlcov/**
    - main.py
    - tests/**

functions:
  app:
    handler: app.api.handler
    events:
      - httpApi:
          method: '*'
          # See https://github.com/dherault/serverless-offline/issues/1118
          path: ${env:CATCHALL_ROUTE, '*'}

plugins:
  - serverless-offline
  - serverless-python-requirements
custom:
  pythonRequirements:
    dockerizePip: non-linux
    zip: true
    # Use Docker to compile any C extensions for AWS Lambda platform.
    # `pydantic` will Cython-compile for a speed boost at the expense of larger
    # deployment package: ~12 MB vs ~600 KB
    # dockerizePip: non-linux
  serverless-offline:
    # Remove the API Gateway REST API `/dev` stage prefix.
    # https://github.com/dherault/serverless-offline/issues/1118
    noPrependStageInUrl: true
